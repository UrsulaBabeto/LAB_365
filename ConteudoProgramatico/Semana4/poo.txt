POO


class Poligono {
  constructor (altura,largura){
    this.altura = altura
    this.largura = largura
  }



  get area () {
    return this.#calcularArea()
  }
  set mudarLargura(num) {
    this.largura = num
  }
  #calcularArea () {
    return this.altura * this.largura
  }
}
let poligono = new Poligono(50,60)
poligono.mudarLargura = 20
console.log(poligono.area)

let altura = 50
let largura = 60

function calcularArea (alt,lar) {
  return alt* lar
}
console.log(calcularArea(50,60))
const carroDoTales = new Veiculo('azul',100)class Veiculo {
  constructor(cor,velocidade) {
    this.cor = cor
    this.velocidade = velocidade
  }
  acelerar ( ) {
    console.log('o carro chegou a'+this.velocidade+'por hora')
  }
  buzinar ( ) {
    console.log('fom fom')
  }
}
/* class Veiculo {
  constructor(cor,velocidade) {
    this.cor = cor
    this.velocidade = velocidade
  }
  acelerar ( ) {
    console.log('o carro chegou a'+this.velocidade+'por hora')
  }
  buzinar ( ) {
    console.log('fom fom')
  }
}

quase tudo no js é objeto
todo objeto tem uma herança
objetos podem herdar ou estender caracteristicas da base
uma copia de atributos e metodos de outra classe

class filho extends pai{
super(atributos,pai)
this.filho=filho
}

class Pessoa {
    constructor(nome, idade) {
        this.nome = nome
        this.idade = idade
    }
    falar() {
        console.log("ola mundo")
    }
}

class Professor extends Pessoa {
    constructor(nome, idade, materia) {
        super(nome, idade);
        this.materia = materia;
    }
    
}
const su = new Professor('ursula',33,"geografia");
const ro = new Pessoa('ursula',33,"geografia");
console.log(su)
console.log(ro)
su.falar()
ro.falar()

class Tipo {
  constructor (altura,largura){
    this.altura = altura
    this.largura = largura
  }
  static multiply (altura=this.altura,largura=this.largura){
    this.altura = altura
    this.largura = largura
    return this.altura * this.largura
  }
}

const multi = new Tipo(2,2)
//console.log(multi.multiply(2,2))
console.log(Tipo.multiply(2,2))