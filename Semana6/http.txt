get captura dados, listar
post envia dados, inserir
put atualiza dados,editar (deleção logica - setar como true or falsse para aparecer ou não no sistema)
delete deleta dados,excluir

patch edita um unico atributo

1xx informational
2xx success
3xx redirection
4xx client error
5xx server error

URI - é o que vem depois do caminho URL www.google.com.br/URI....

body de requisição post ou put
:params é utilizado para get ou delete
re.params.{identificador}


			                 middleware				                      callback
app.post('/create',(req,res,next)=>{validação para acesso da rota}, (req,res)=>{regras de negocio})

é possivel fazer mais de um middleware com um array
 [
    (req,res,next)=>{validação para acesso da rota},
(req,res,next)=>{validação para acesso da rota},
(req,res,next)=>{validação para acesso da rota},
]

para retornar um arquivo HTML importe o path cconst path - require('path')
console.log(_dirname)
app.get ... res.sendFile(path.join(_dirname,'/test.txt'))

importar: const nome = require(./caminho)
const router = express.Router()
router.get('/lala/:id',nomedoarquivo.nomedometodo); module.exports = router
controller-functions; module.exports ={}

rotas redirecionam para as funções de callback
controller contem todas os callbacks
conexao com api em um outro arquivo
  